@page "/resume/{userid}"
@inject UserManager<JobProfile> userManager

<div class="text-center my-5">
    <h1 class="display-6">Resume</h1>
</div>

<style>
    .resume {
        padding-bottom: 20em;
        display: grid;
        grid-template-rows: 250px 700px;
        grid-template-areas:
            "resume-head"
            "resume-data";
        border-style: solid;
        border-width: 3px;
        border-radius: 20px;
        padding: 20px;
    }

    .resume-head {
        grid-area: resume-head;
        padding-left: 30px;
        display: grid;
        grid-template-columns: 1fr 2fr;
    }

    .resume-data {
        grid-area: resume-data;
        display: grid;
        grid-template-columns: 1fr 1.5fr;
        grid-template-rows: 1fr 1fr 1fr;
        grid-template-areas:
            "bio education"
            "specialization experience"
            "contact projects";
    }

    table {
        table-layout: fixed;
    }

    th {
        text-align: left;
    }

    td {
        padding: 5px 20px;
    }


    .secHeading {
        color: black;
        font-weight: 600;
    }

    .tertHeading {
        color: rgb(3, 215, 255);
        font-weight: 400;
    }

    .name {
        display: flex;
        flex-direction: column;
        margin-top: 50px;
        left: 20px;
        font-size: 35px;
        color: black;
    }

    .image img {
        border-radius: 50%;
        height: 150px;
        width: 150px;
    }

    .bio {
        grid-area: bio;
        padding: 10px 15px 0 0;
    }

    .education {
        grid-area: education;
        padding-left: 10px;
        padding-top: 10px;
    }

    .specialization {
        grid-area: specialization;
        padding-left: 10px;
        padding-top: 10px;
    }

    .experience {
        grid-area: experience;
        padding-left: 10px;
        padding-top: 10px;
    }

    .contact {
        grid-area: contact;
        padding-left: 10px;
        padding-top: 10px;
    }

    .projects {
        grid-area: projects;
        padding-left: 10px;
        padding-top: 10px;
    }
</style>

@if (loading)
{
    <Loader />
}
else
{
    <div class="resume">
        <div class="resume-head">
            <div class="image">
                <img src="@(user.ProfilePicture == null ? "img/user.svg" : user.ProfilePicture)" />
            </div>
            <p class="name">@user.FullName (#@user.Id)</p>
        </div>

        <div class="resume-data">

            <div class="bio">
                <p class="secHeading">BIO:</p>
                <p>@user.Bio</p>
                <hr />
            </div>

            <div class="education">
                <p class="secHeading">EDUCATION</p>
                <table>
                    @foreach (var academicDetail in user.Resume.AcademicDetails)
                    {
                        <tr>
                            <td>Type</td>
                            <td>@academicDetail.Type</td>
                        </tr>
                        <tr>
                            <td>Institute</td>
                            <td>@academicDetail.Institute</td>
                        </tr>
                        <tr>
                            <td>University / Board</td>
                            <td>@academicDetail.University</td>
                        </tr>
                        <tr>
                            <td>Marks</td>
                            <td>@academicDetail.Marks @academicDetail.MarksType</td>
                        </tr>
                        <tr>
                            <td>End Date</td>
                            <td>@academicDetail.EndDate.ToShortDateString()</td>
                        </tr>
                    }
                </table>
                <hr />
            </div>

            <div class="specialization">
                <p class="secHeading">SKILLS:</p>
                <ul>
                    @foreach (var skill in user.Resume.Skills)
                    {
                        <li>@skill.Name</li>
                    }
                </ul>
                <hr />
            </div>

            <div class="experience">
                <p class="secHeading">EXPERIENCES:</p>
                @foreach (var expereince in user.Resume.Expereinces)
                {
                    <p class="tertHeading">@expereince.Name</p>
                    <p>Start Date : @expereince.StartDate.ToShortDateString()</p>
                    <p>End Date : @expereince.EndDate.ToShortDateString()</p>
                    <hr />
                }
            </div>

            <div class="contact">
                <p class="secHeading">GET IN TOUCH:</p>
                <p class="tertHeading">Mobile :</p>
                <p> 8265927091</p>
                <p class="tertHeading">Email :</p>
                <p> @user.Email</p>
                <hr />
            </div>

            <div class="projects">
                <p class="secHeading">PROJECTS:</p>
                @foreach (var project in user.Resume.Projects)
                {
                    <p class="tertHeading">@project.Title : </p>
                    <p>Start Date : @project.StartDate.ToShortDateString()</p>
                    <p>End Date : @project.EndDate.ToShortDateString()</p>
                }
                <hr />
            </div>

        </div>
    </div>
}

@code {
    [CascadingParameter]
    private Task<AuthenticationState> authenticationStateTask { get; set; }

    public ClaimsPrincipal principal { get; set; }

    [Parameter]
    public string userid { get; set; }

    private JobProfile user;
    private bool loading = false;

    protected override async Task OnInitializedAsync()
    {
        loading = true;

        principal = (await authenticationStateTask).User;
        user = await userManager.Users
        .Include(x => x.Resume)
        .Include(x => x.Resume.Skills)
        .Include(x => x.Resume.AcademicDetails)
        .Include(x => x.Resume.Expereinces)
        .Include(x => x.Resume.Projects)
        .AsSplitQuery()
        .SingleAsync(x => x.Id == userid);
        loading = false;
    }
}
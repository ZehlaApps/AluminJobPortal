@page "/employer"
@attribute [Authorize(Roles = "Employer")]

@inject UserManager<JobProfile> userManager
@inject JobListingService jobListingService
@inject JobApplicationService jobApplicationService

<div class="text-center my-5">
    <h1 class="display-6">Job offers by you</h1>
</div>



@if (loading)
{
    <Loader />
}

else
{
    <div class="my-5 alert alert-info">
        <ul class="nav nav-pills">
            <li class="nav-item">
                <a class="nav-link" aria-current="page" href="/profile">Edit Profile</a>
            </li>

            <li class="nav-item">
                <a class="nav-link" target="_blank" href="/resume/@user.Id">View Profile</a>
            </li>
        </ul>
    </div>

    if (user != null && user.OrganisationVerified)
    {
        <div class="row">
            <div class="col-md-4">
                <div class="mb-3">
                    <div class="d-flex align-items-center flex-column">
                        <img src="@(newJob.JobPicture == null ? "img/default_logo.svg" : newJob.JobPicture)" height="150"
                    width="150" class="rounded card p-3" />
                    </div>
                </div>
                <div>
                    <div class="mb-3">
                        <label class="form-label">Job Logo</label>
                        <InputFile OnChange="@OnInputFileChange" class="form-control" />
                    </div>

                    <div class="mb-3">
                        <label class="form-label">Job Title</label>
                        <input @bind="newJob.JobTitle" type="text" class="form-control" placeholder="*Assistant Programmer">
                    </div>

                    <div class="mb-3">
                        <label class="form-label">Job Description</label>
                        <textarea @bind="newJob.JobDescription" class="form-control" placeholder="*2 Year experience required ">
                                            </textarea>
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Job Sector</label>
                        <select @bind="newJob.JobSector" class="form-control" placeholder="*IT Sector">

                    <option>Accountancy and finance</option>
                    <option>Business and consulting</option>
                    <option>Charity and voluntary</option>
                    <option>Creative arts and design</option>
                    <option>Energy and utilities</option>
                    <option>Engineering and manufactring</option>
                    <option>Environment and agriculture</option>
                    <option>Healthcare</option>
                    <option>Hospitality and events</option>
                    <option>Information technology</option>
                    <option>Law</option>
                    <option>Law enforcement</option>
                    <option>Media and internet</option>
                    <option>Property and construction</option>
                    <option>Recruitment and HR</option>
                    <option>Retail</option>
                    <option>Sales</option>
                    <option>Science and pharmaceuticals</option>
                    <option>Education</option>
                    <option>Transport and logistics</option>
                        </select>
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Job Location</label>
                        <input @bind="newJob.JobLocation" type="text" class="form-control" placeholder="*Lucknow">
                    </div>
                    <button type="button" class="btn btn-success" @onclick="CreateJobAsync">Post Job</button>
                </div>
            </div>
            <div class="col-md-8">
                @if (jobListings.Any())
                {
                    <div class="accordion accordion-flush" id="accordion">
                        @foreach (var job in jobListings)
                        {
                            <div class="accordion-item">
                                <h2 class="accordion-header" id="flush-headingOne">
                                    <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse"
                        data-bs-target="#flush-@job.Id" aria-expanded="false" aria-controls="flush-collapseOne">
                                        @job.JobTitle
                                    </button>
                                </h2>

                                <div id="flush-@job.Id" class="accordion-collapse collapse" data-bs-parent="#accordion">
                                    <div class="accordion-body">
                                        <div class="text-center my-3">
                                            <h4>Applications</h4>
                                        </div>

                                        @if (job.JobApplications.Any())
                                        {
                                            <table class="table">
                                                <thead>
                                                    <tr>
                                                        <th>Applicant Name</th>
                                                        <th>Applicant College</th>
                                                        <th>Application Date</th>
                                                        <th>Resume</th>
                                                        <th>Status</th>
                                                    </tr>
                                                </thead>
                                                <tbody>
                                                    @foreach (var application in job.JobApplications)
                                                    {
                                                        <tr>
                                                            <td>@application.ApplicantName</td>
                                                            <td>@application.ApplicantCollege</td>
                                                            <td>@application.ApplicationDate</td>
                                                            <td>
                                                                <a href="/resume/@application.ApplicantId" class="btn btn-light">
                                                                    View Resume <span class="oi oi-eye"></span>
                                                                </a>
                                                            </td>
                                                            <td>
                                                                @if (application.ApplicationApproved)
                                                                {
                                                                    <span class="btn btn-success">
                                                                        Approved <span class="oi oi-circle-check"></span>
                                                                    </span>
                                                                }
                                                                else
                                                                {
                                                                    <button class="btn btn-primary" @onclick="(() => ApproveAsync(application))">
                                                                        Approve
                                                                    </button>
                                                                }
                                                            </td>
                                                        </tr>
                                                    }
                                                </tbody>
                                            </table>
                                        }
                                        else
                                        {
                                            <p class="text-muted text-sm-center">
                                                No Applications found
                                            </p>
                                        }

                                        <div class="card my-2 p-3">
                                            <div class="mb-3">
                                                <label class="form-label">Edit Title</label>
                                                <input @bind="job.JobTitle" type="text" class="form-control"
                                    placeholder="*Assistant Programmer">
                                            </div>
                                            <div class="m-1">
                                                <label class="form-label">Edit Description</label>
                                                <textarea @bind="job.JobDescription" class="form-control"
                                    placeholder="*2 Year experience required "></textarea>
                                            </div>
                                            <div class="mb-3">
                                                <label class="form-label">Job Sector</label>
                                                <select @bind="job.JobSector" class="form-control" placeholder="*IT Sector">
                                                    <option>IT Sector</option>
                                                    <option>Chemical Sector</option>
                                                    <option>Food Sector</option>
                                                    <option>Automotive Sector</option>
                                                    <option>BioTech Sector</option>
                                                    <option>Construction Sector</option>
                                                    <option>Commerce Sector</option>
                                                </select>
                                            </div>
                                            <div class="mb-3">
                                                <label class="form-label">Job Location</label>
                                                <input @bind="job.JobLocation" type="text" class="form-control" placeholder="*Lucknow">
                                            </div>

                                            <div class="m-1 mt-2">
                                                <button type="button" class="btn btn-primary"
                                    @onclick="(() => UpdateJobAsync(job))">Save</button>
                                                <button type="button" class="btn btn-danger"
                                    @onclick="(() => DeleteJobAsync(job.Id))">Delete</button>

                                            <a href="/job/@job.Id" class="btn btn-primary" target="_blank">
                                                View
                                            </a>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        }
                    </div>
                }
                else
                {
                    <NoData />
                }
            </div>
        </div>
    }
    else
    {
        <p class="text-muted text-sm-center">
            Organisation verificarion not done</p>
    }
}


@code {
    [CascadingParameter]
    private Task<AuthenticationState> authenticationStateTask { get; set; }

    private JobProfile user;
    private JobListing newJob;
    private IEnumerable<JobListing> jobListings;

    private bool loading = false;

    protected override async Task OnInitializedAsync()
    {
        loading = true;

        newJob = new JobListing();
        user = await userManager.GetUserAsync((await authenticationStateTask).User);
        jobListings = await jobListingService.GetJobListingsAsync(user.Id);

        loading = false;
    }

    private async Task CreateJobAsync()
    {
        await jobListingService.CreateJobListingAsync(new JobListing
        {
            Id = Guid.NewGuid().ToString(),
            JobTitle = newJob.JobTitle,
            JobDescription = newJob.JobDescription,
            JobLocation = newJob.JobLocation,
            JobSector = newJob.JobSector,
            EmployerId = user.Id,
            @* Employer = user, *@
            JobPicture = newJob.JobPicture
        });
        await OnInitializedAsync();
    }

    private async Task DeleteJobAsync(string id)
    {
        await jobListingService.DeleteJobListingAsync(id);
        await OnInitializedAsync();
    }

    private async Task UpdateJobAsync(JobListing job)
    {
        await jobListingService.UpdateJobListingAsync(job);
    }

    private async Task ApproveAsync(JobApplication application)
    {
        application.ApplicationApproved = true;
        await jobApplicationService.UpdateJobApplicationAsync(application);
    }

    private async Task OnInputFileChange(InputFileChangeEventArgs e)
    {
        var format = "image/png";
        var imageFile = e.File;
        var resizedImageFile = await imageFile.RequestImageFileAsync(format,
        300, 300);
        var buffer = new byte[resizedImageFile.Size];

        await resizedImageFile.OpenReadStream().ReadAsync(buffer);

        newJob.JobPicture =
        $"data:{format};base64,{Convert.ToBase64String(buffer)}";
    }
}
